use object
# use std

# global variable
const OBJ_MAX: u64 = 100

pub type ObjList = struct {
    obj: [&Object; OBJ_MAX],
    count: u64,
}

pub fun init_objList(): ObjList {
    let obj: [&Object; OBJ_MAX] = [];
    ret ObjList {
        obj = obj[..],
        count = 0,
    };
}

pub fun obj_insert(l: ObjList, o: &Object): i64 {
    if obj_isFull(l) { 
        ret -1;
    }
    l.obj[l.count] = o;
    l.count = l.count + 1;
    ret 0;
}

pub fun obj_remove(l: ObjList, o: &Object): i64{
    let i: u64 = 0;
    let j: u64 = 0;
    while i < l.count { 
        if l.obj[i] == o {
            j = i;
            while j < l.count {
                l.obj[j] = l.obj[j+1];
            }
        }
        i = i+1;
    }
}

pub fun obj_rmLast(l: ObjList): i64{
    l.count = l.count - 1;
}

pub fun obj_clear(l: ObjList) {
    l.count = 0;
}

pub fun obj_isEmpty(l: ObjList): bool {
    ret l.count == 0;
}

pub fun obj_isFull(l: ObjList): bool {
    ret l.count == OBJ_MAX;
}
